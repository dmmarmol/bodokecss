// _input.scss

$input-height: 			2em;
$input-padding-y:		round($input-height - ($input-height / 2)) / 2;
$input-line-height: 	round($input-height - ($input-height / 2));

$input-border-radius:	5px;

$input-error-color: 	c('red');

// INPUTS
input, select, textarea 
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="time"],
input[type="url"],
input[type="week"],
#{$bodoke-prefix}-input,
{
	padding-top: $input-padding-y;
	padding-bottom: $input-padding-y;
	padding-right: $col-offset;
	padding-left: $col-offset;
	-webkit-appearance: none;
	position: relative;
	width: auto;
	font-size: 0.9em;
	font-weight: 300;	
	border: 1px solid $gray-border;
	background: #FFF;	
	@include box-shadow( none );
	@include border-radius( $input-border-radius );
	@include placeholder {
		color: hsl(0, 0, 60%);
	}
}


// INPUTS
input, select, textarea 
input[type="date"],
input[type="datetime"],
input[type="datetime-local"],
input[type="email"],
input[type="month"],
input[type="number"],
input[type="password"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="time"],
input[type="url"],
input[type="week"],
#{$bodoke-prefix}-input,
// BUTTONS
button[type="submit"],
button[type="search"],
[role="button"],
{
	&:focus { 
		outline: none; 
	}
}



button {
	&:focus {
		outline: none;
	}
	&.button { 
		border: none;
	}
}
input, select {
	line-height: $input-line-height;	
}
select {
	height: $input-height;
}
input {

}


// ================================
// REQUIREMENTS AND INFO
// ================================
sup, .sup {
		top: 0;
		color: $red;
		font-size: 14px;
	}
.q {
	position: relative;
	bottom: 3px;
	color: $gray-border;
	font-size: 10px;
	font-weight: 600;
}

// ================================
// RADIO AND CHECK BUTTONS
// ================================
input[type="radio"],
input[type="checkbox"] {
	width: 16px;
	height: 16px;
	&:checked {
		border: 4px solid white;
		background-color: $color-1;
	}
}


// ================================
// INPUT STRUCTURE
// ================================
$input-offset:	1em;
.input-row {
	margin-bottom: $input-offset;
	@include clear;
	.label-title {
		color: $text-color;
		margin-top: 0;
		margin-bottom: 0;
	}
	&.input-horizontal {
		label {
			line-height: em(38px);
		}
	}
	&.input-vertical {
		label {
			display: block;
			margin-bottom: 1em;
		}
	}
}


/* 
 * Si funciona como columnas
 */
.input-row {
	&.cols {
		padding-left: $grid-offset / 2;
		padding-right: $grid-offset / 2;
		&.c#{$grid-columns}-#{$grid-columns} {
			padding-left: $grid-offset / 1.5;
			padding-right: $grid-offset / 1.5;
		}
	}	
}


.input-box {
	padding-top: $input-offset;
}


// ================================
// OPTIONAL & REQUIRED
// ================================
$optional-text-color: gray(150);
/* 
 * Input opcional
 */
.input-row {
	&.input-optional {
		label { color: $optional-text-color; }
		input, textarea {
			@include placeholder() {
				color: $optional-text-color;				
			}
		}		
		select {
			option:first-child, option[selected] {
				color: $optional-text-color;			
			}
		}
	}
}
/* 
 * Input required
 */
.input-row {
	&.input-required {
		label { color: $text-color; }
		input, textarea {
			@include placeholder() {
				color: $text-color;				
			}
		}
		select {
			color: $text-color;
			option:first-child, option[selected] {
			}
		}
	}
}
/* 
 * Comentario cuando el input es opcional
 *
 */
.optional-comment {
	text-align: center;
	color: $optional-text-color;
	font-size: 0.9em;
	padding-top: $col-offset;
	padding-bottom: $col-offset;
}


// ================================
// INPUT GROUP
// ================================
.input-group {
	input, button, textarea, select {
		&:first-child {
			@include border-radius( $button-radius 0 0 $button-radius );
			border-right: none;
		}
		&:last-child {
			@include border-radius( 0 $button-radius $button-radius 0 );
			border-left: none;
		}
	}
}


// ================================
// ESTADOS
// ================================
[onclick], [mouseover], [mouseout] {
	cursor: pointer;
}
[disabled], [disable] {
	cursor: default;
}





/* 
 * Input con errores
 *
 */
@mixin bdk-input-error($color: 'red') {
	&.input-error {
		border-width: 2px;
		border-style: solid;
		border-color: c(#{$color});
	}
}
input, select, textarea {
	@include bdk-input-error();
}
.input-row.input-error {
	input {
		&[type="checkbox"], &[type="radio"] {
			&.input-error {
				@include bdk-input-error();				
			}			
		}
	}
	select, textarea {
		@include bdk-input-error();		
	}
}

/* 
 * Label con errores
 *
 */
label, .input-row .label-title {
	&.input-error {
		color: c('red');
		font-weight: bold;
	}
}

/* 
 * Mensaje de error
 */
p.error-message {
	display: block;
	color: white;
	background-color: $input-error-color; 
	@include box-shadow( 0 1px 0 0 darken( $input-error-color, 12% ) );
	font-weight: 500;
	padding-top: ($col-offset / 2);
	padding-bottom: ($col-offset / 2);
	padding-left: $col-offset;
	padding-right: $col-offset;
	@include border-radius( $input-border-radius ); // Reemplazar por $input-border-radius
	@include text-shadow( 0 1px 1px darken( $input-error-color, 12% ) ); 
}
.error-message {
	width: 100%;
	font-size: 0.8em;
	line-height: 1.5em;
	margin-bottom: $col-offset * 1.5;
	&-inline {
		background: transparent;
		display: inline-block;
		margin-top: 4px;
		font-size: 0.8em;
		padding-left: 3px;
		color: $input-error-color;		
		@include text-shadow( 0 1px 0 white(0.8) ); // Reemplazar por $input-error-color
	}
}



// ====================
// ERRORS
// ====================
// bdk-error
$error-arrow-directions: ('up', 'right', 'down', 'left');
.#{$bodoke-prefix}-error {
	z-index: 100;
	.error-panel {
		position: relative;
		@include transition( opacity $transition-speed ease );
		@include border-radius( 5px );
		@include transition( background $transition-speed ease );
		// Fondo por default
		background-color: hsl(0, 0, 80%); 
		// Colores para el alert/error
		@each $alert in $alerts-color-pallete {
			&.#{nth( $alert, 1 )} {
				background-color: nth($alert, 2);
				// Flechitas
				&.arrow {
					@each $direction in $error-arrow-directions {
						&.#{$direction} {
							@include arrow(nth($alert, 2), 8px, $direction);					
						}
					}
				}
			}
			.message {
				@if lightness( nth($alert,2) ) > lightness(#aaa) {
					color: $text-color;
				} @else {
					color: white();
				}
			}
		}

		.message {
			width: 100%;
			margin: 0;
			padding-top: $col-offset;
			padding-bottom: $col-offset;
			text-align: center;
			font-family: $courrier;
			font-weight: 300;
			font-size: 12px;
			line-height: 14px;
		}
	}
}