//// 
/// _grid.scss
/// "The grid, the final frontier..."
///
/// @version 2.5
/// @since 0.1.1
/// @created 19/09/14
////

@import "normalize";
@import "reset";
@import "grid-media-mixin"; // Nueva grilla para los media queries

*, *:after, *:before {
	@include box-sizing( border-box );
}

// =============================
// GRILLA (responsive)
// Configuracion
// =============================

// Contenedor
$container:					'container';	// container classname
$container-width:	 		93.75%;			// container width
$container-max-width:	 	1260px;			// container max-width
$container-full-width:		100%;			// biggest .col width
// Grilla
$grid-columns:				$grid-max-cols;	// Cantidad de columnas base | @see 'settings/config.scss'
$grid-col-prefix:	 		'c';			// Prefijo de las columnas
$grid-push-left-prefix:		'push';			// Empuja desde la izquierda
$grid-push-right-prefix:	'pull';			// Empuja desde la derecha
$grid-medium-prefix:		'md';			// Medium screens (menores a 800px)
$grid-tablet-prefix:		'tablet';		// Tablets
$grid-mobile-prefix:		'mobile';		// Dispositivos mobiles
$grid-offset:				$offset;		// Valor modular para los espacios en la grilla | @see 'settings/config.scss'


// =====================
// ESTRUCTURA DEL SITIO
// =====================

// Rows
.row {
	width: auto;
	margin-right: (-$grid-offset);
	margin-left: (-$grid-offset);	
	// La .row no come los paddings de las columnas
	&.collapse {
		margin-right: 0;
		margin-left: 0;
	}
	// La .row come solo el padding derecho de las columnas
	&.collapse-right {
		margin-right: (-$grid-offset);
		margin-left: 0;
	}
	// La .row come solo el padding izquierdo de las columnas
	&.collapse-left {
		margin-left: (-$grid-offset);
		margin-right: 0;
	}
	// Clearfix
	@include clear();
}
.row-half 	{ margin-bottom: $grid-offset / 2; }
.row-one 	{ margin-bottom: $grid-offset; }
.row-two 	{ margin-bottom: $grid-offset * 2; }
.row-three 	{ margin-bottom: $grid-offset * 3; }
.row-four 	{ margin-bottom: $grid-offset * 4; }

// Sections & Content Blocks
.section {
	position: relative;
	display: block;
}

.#{$container} {
	position: relative;
	width: $container-width;
	max-width: $container-max-width;
	margin-left: auto;
	margin-right: auto;
	padding-left: $grid-offset;
	padding-right: $grid-offset;
	.inner-#{$container} {
		padding-left: $grid-offset;
		padding-right: $grid-offset;
	}
	&.collapse {
		padding-left: 0;
		padding-right: 0;		
	}
	&.collapse-right {
		margin-right: -$grid-offset;
		margin-left: 0;
	}
	&.collapse-left {
		margin-right: 0;
		margin-left: -$grid-offset;
	}
}
.#{$container}-full {
	@extend .#{$container};
	width: 100%;
	max-width: none;
	margin-left: auto;
	margin-right: auto;
}

// Debe permanecer vacia 
// como una clase generica
// para poder reutilizarla
.content {}



// ====================
// Columnas
// ====================
.col, .cols, .column, .columns {
	position: relative;
	display: block;
	padding-left: $grid-offset;
	padding-right: $grid-offset;
	float: left;
	&:first-child {}
	&:last-child {}
	&.collapse { 
		padding-left: 0;
		padding-right: 0;
	}
	&.collapse-right {
		padding-right: 0;
	}
	&.collapse-left {
		padding-left: 0;
	}
}
// If direction is "rtl"
[dir="rtl"] {
	.col, .cols, .column, .columns {
		float: right;
	}	
}

// Clase que permite colapsar la columna
@mixin fall() {
	width: 100%;
	float: none;
}

// Devuelve el ancho segun la cantidad de columnas
@function col-width( $col-number, $max-cols: $grid-columns ) {
	@return ($col-number * 100%) / $max-cols;
}

// Para crear una clase del tipo columna con su ancho
@mixin col( $col-number, $max-cols: $grid-columns ) {
	width: col-width( $col-number, $max-cols );
	// *width:	expression(Math.floor( col-width( $col-number ) * (this.parentNode.offsetWidth - parseFloat(this.parentNode.currentStyle.paddingLeft) - parseFloat(this.parentNode.currentStyle.paddingRight))) + "px");
}

// Rows
@mixin generate-rows( $grid-offset ) {

}

// Columnas
@mixin generate-cols( $total-cols, $extra-prefix: '', $separator: '' ) {
	@for $i from 1 through $total-cols {
		@if ( $extra-prefix != '' ) {
			.#{$extra-prefix}#{$separator}#{$i}-#{$total-cols} {
				@include col($i, $total-cols);		
			}
		} @else {
			.#{$extra-prefix}#{$separator}#{$grid-col-prefix}#{$i}-#{$total-cols} {
				@include col($i, $total-cols);		
			}
		}
	}	
}

// Margen izquierdo 
// (para compensar la ausencia de columnas a la izquierda)
@mixin generate-push( $total-cols, $extra-prefix: '', $separator: '' ) {
	@for $i from 1 through $total-cols {
		.#{$extra-prefix}#{$separator}#{$grid-push-left-prefix}#{$i}-#{$total-cols} {
			margin-left: col-width($i, $total-cols);
		}
	}	
}

// Margen derecho 
// (para compensar la ausencia de columnas a la derecha)
@mixin generate-pull( $total-cols, $extra-prefix: '', $separator: '' ) {
	@for $i from 1 through $total-cols {
		.#{$extra-prefix}#{$separator}#{$grid-push-right-prefix}#{$i}-#{$total-cols} {
			margin-right: col-width($i, $total-cols);
		}
	}	
}

// Mixin para generar la grilla
@mixin grid( $total-cols: $grid-columns ) {
	$columns: '';
	@if $total-cols != $grid-columns {
		$columns: $total-cols;
	} @else {
		$columns: $grid-columns;
	}
	// Todas las resoluciones
	@include generate-cols( $columns );
	@include generate-push( $columns );
	@include generate-pull( $columns );

	
	// =========================
	// Pantallas menores a 800
	// =========================
	@media only screen and (max-width: 800px) {
		// @import "grid-800";

		.#{$container}, .#{$container}-full {
			width: 100%;
			max-width: none;
			padding-left: $grid-offset; 
			padding-right: $grid-offset; 
		}

		// Rows
		.row {
			&.collapse,
			&.collapse-right,
			&.collapse-left {
				margin-right: (-$grid-offset);
				margin-left: (-$grid-offset);			
			}			
		}

		// Las columnas colapsan en esta resolucion
		.col, .cols, .column, .columns {
			width: 100%;
			// Clase que permite colapsar la columna segun el dispositivo
			&.#{$grid-medium-prefix}fall {
				@include fall();
			}
			&.collapse,
			&.collapse-right,
			&.collapse-left {
				padding-right: $grid-offset;
				padding-left: $grid-offset;
			}
		}
		// Anula los efectos del @include grid-offset();			
		[class*="#{$grid-push-left-prefix}"] {
			margin-left: 0;
		}
		// Anula los efectos del @include grid-pull();
		[class*="#{$grid-push-right-prefix}"] {
			margin-right: 0;
		}

		// Ancho de columnas que se ejecuta cuando la resolucion
		// Es menor a 800
		// ====================
		// @include generate-cols( $columns, $grid-medium-prefix );
		// @include generate-push( $columns, $grid-medium-prefix );
		// @include generate-pull( $columns, $grid-medium-prefix );

		// Clases comunes
		// ====================
		@include grid-media-query( $grid-medium-prefix, $columns );

	} // End >800 screens Media Query


	// =============================================
	// Tablet Devices (Layout, Modifications, etc)
	// iPads (portrait and landscape)
	// =============================================
	@media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {
		
		.container.tablet {}
		.#{$container}-full.tablet {}
		
		// Grilla para tablets
		// =========================
		// Rows
		.row {
			&.collapse,
			&.collapse-right,
			&.collapse-left {
				margin-right: (-$grid-offset);
				margin-left: (-$grid-offset);			
			}			
		}
		.col, .cols, .column, .columns {
			// Clase que permite colapsar la columna segun el dispositivo
			&.#{$grid-tablet-prefix}fall {
				@include fall();
			}
			&.collapse,
			&.collapse-right,
			&.collapse-left {
				padding-right: $grid-offset;
				padding-left: $grid-offset;
			}			
		}
		[class*="#{$grid-push-left-prefix}"] {}
		[class*="#{$grid-push-right-prefix}"] {}
		[class*="#{$grid-medium-prefix}"] {
			width: 100%;
		}

		// Clases comunes
		// ====================
		@include grid-media-query( $grid-tablet-prefix, $columns );

	} // End Tablet Media Query


	// =============================================
	// Mobile Devices (Layout, Modifications, etc)
	// Smartphones (portrait and landscape)
	// =============================================
	@media only screen and (min-device-width : 320px) and (max-device-width : 640px) {

		// Grilla para mobile
		// =========================
		// Rows		
		.row {
			margin-left: -$m-offset;
			margin-right: -$m-offset;
			&.row-one 	{ margin-bottom: 0.50em; }
			&.row-two 	{ margin-bottom: 0.75em; }
			&.row-three { margin-bottom: 1em; }
			&.row-four 	{ margin-bottom: 1.25em; }
			
			&.collapse,
			&.collapse-right,
			&.collapse-left {
				margin-right: (-$m-offset);
				margin-left: (-$m-offset);			
			}			
		}
		// Las columnas colapsan en mobile
		.col, .cols, .column, .columns, [class*="#{$grid-medium-prefix}"] {
			display: block;
			// width: col-width($columns);
			width: 100%;
			padding-left: $m-offset;
			padding-right: $m-offset;
			// margin-left: 0;
			// margin-right: 0;
			// Clase que permite colapsar la columna segun el dispositivo
			&.#{$grid-mobile-prefix}fall {
				@include fall();
			}
			&.collapse,
			&.collapse-right,
			&.collapse-left {
				padding-right: $m-offset;
				padding-left: $m-offset;
			}
		}
		// Anula los efectos del @include grid-offset();			
		[class*="#{$grid-push-left-prefix}"] {
			margin-left: 0;
		}
		// Anula los efectos del @include grid-pull();
		[class*="#{$grid-push-right-prefix}"] {
			margin-right: 0;
		}

		// Exclusivo Mobile
		.container:not(.#{$grid-mobile-prefix}) {
			width: 100%;
			padding-left: $m-offset;
			padding-right: $m-offset;
		}

		// Tablas en mobile
		table th, table td {
			padding: 4px;
		}

		// Clases comunes
		// ====================
		@include grid-media-query( $grid-mobile-prefix, $columns );

	} // End Mobile Media Query

} // End of the grid() @mixin