////
/// Custom BDK Functions
/// Usefull set of functions for the user
////


/// Devuelve el ancho porcentual segun la cantidad de columnas
/// @author [Diego Martin Marmol](http://diegomarmol.com.ar)
/// @since 0.1
/// @param {int} $col-number - The Column number
/// @param {int} $max-cols - Max grid columns
@function col-width( $col-number, $max-cols: $grid-columns ) {
	@return ($col-number * 100%) / $max-cols;
}

@function black( $opacity:1, $output:'rgba' ) {
	@if $opacity != 1 {
		@return rgba(0, 0, 0, $opacity);
	} @else {
		@if $output == 'hex' {
			@return #000;			
		} @elseif $output == 'hls' {
			@return hls(0, 0, 0);
		} @elseif $output == 'rgb' {
			@return rgb(0, 0, 0);
		} @else {
			@return rgba(0, 0, 0, 1);			
		}
	}
}
@function white( $opacity:1, $output: 'rgba' ) {
	@if $opacity != 1 {
		@return rgba(255, 255, 255, $opacity);		
	} @else {
		@if $output == 'hex' {
			@return #FFF;			
		} @elseif $output == 'hls' {
			@return hls(0, 100%, 0);
		} @elseif $output == 'rgb' {
			@return rgb(255, 255, 255);
		} @else {
			@return rgba(255, 255, 255, 1);
		}
		@return #FFF;
	}
}

/// devuelve un color segun el indice
/// del array $institutional-color-pallete de colors.scss
/// @since 0.1.1
@function color($key) {
	@return map-get($institutional-color-pallete, $key);
}
 

/// Atajo para generar un color en escala de grises en base a un valor entre 0 y 255
/// @since 0.0.4
/// @example gray(125) = rgb(125, 125, 125);
/// @example gray(125, 0.2) = rgba(125, 125, 125, 0.2);
@function gray( $value, $alpha:1 ) {
	@if ($alpha == '') {
		@return rgb( $value, $value, $value );
	} @else {
		@return rgba( $value, $value, $value, $alpha );		
	}
}



/// @since 0.1.4
/// bgpos()
/// Calcula la posicion del fondo en base a la multiplicacion de un modulo=
@function bgpos($pos, $module, $unit: px){
	@return -$module * $pos + $unit;
}


@function img( $path, $refresh:false ) {
	@return url( $IMGPATH + $path + if($refresh!=false, '?' + $refresh, '') );
}
@function icon( $path, $refresh:false ) {
	@return url( $IMGPATH + 'icon/' + $path + if($refresh!=false, '?' + $refresh, '') );
}
@function placeholder( $path, $refresh:false ) {
	@return url( $IMGPATH + 'placeholder/' + $path + if($refresh!=false, '?' + $refresh, '') );
}
@function input( $path, $refresh:false ) {
	@return url( $IMGPATH + 'input/' + $path + if($refresh!=false, '?' + $refresh, '') );
}
@function bg( $path, $refresh:false ) {
	@return url( $IMGPATH + 'background/' + $path + if($refresh!=false, '?' + $refresh, '') );
}

// Strip Number Unit
@function strip-units($number) {
	@return $number / ($number * 0 + 1);
}



/// Convert PX value to EM
/// @since 0.0.1
/// @author [Diego Martin Marmol](http://diegomarmol.com.ar)
/// @acces public
/// @param {int} $target
/// @param {int} $context [$base-em] - Base em value (1em = $base-em)
@function em($target, $context: $base-em) {
	@if $target == 0 { @return 0; }
	$context: strip-units( $context );
	$number: strip-units( $target );
	// @warn 'target '+$target;
	// @warn 'number '+$number;
	// @warn 'context '+$context;
	$number: ($number / $context) + 0em;
	// @return $target / $context + 0em;
	@return $number;
}

/// Convert EM value to PX
/// @since 0.0.1
/// @author [Diego Martin Marmol](http://diegomarmol.com.ar)
/// @acces public
/// @param {int} $target
/// @param {int} $context [$base-em] - Base em value (1em = $base-em)
@function px($target, $context: $base-em){
	@if $target == 0 { @return 0; }
	$context: strip-units( $context );
	$number: strip-units( $target );
	$number: ($number * $context) + 0px;
	@return $number;
}

/// Convert Rem to Ems
/// @since 0.5.3
/// @group Units function group
/// @author [Diego Martín Mármol](http://diegomarmol.com.ar)
/// @param {int} $target
/// @param {int} $context [$base-em] - Base em value (1em = $base-em)
@function rem-to-em($target, $context: $base-em) {
	@if $target == 0 { @return 0; }
	$remSize: strip-units($target);
	@return #{$remSize}em;
}


/// Calcula el porcentaje indicado del numero indicado
/// @since 0.0.6
/// @author [Diego Martin Marmol](http://diegomarmol.com.ar)
/// @acces public
/// @param {int} $value - Numero a calcular
/// @param {int} $percent - Porcentaje
@function percent( $value, $percent ) {
	@return ($value * $percent) / 100;
}


/// Devuelve el primer valor de una lista
/// @since 0.1.4
/// @author [Hugo Giraudel](HugoGiraudel.com/2013/08/08/advanced-sass-list-functions/)
/// @acces public
/// @param {list} $list - List
@function first($list) {
	@return nth($list, 1);
}

/// Devuelve el ultimo valor de una lista
/// @since 0.1.4
/// @author [Hugo Giraudel](HugoGiraudel.com/2013/08/08/advanced-sass-list-functions/)
/// @acces public
/// @param {list} $list - List
@function last($list) {
	@return nth($list, length($list));
}

/// Last index of value "x"
/// @since 0.1.4
/// @author [Hugo Giraudel](HugoGiraudel.com/2013/08/08/advanced-sass-list-functions/)
/// @acces public
/// @param {list} $list - List
/// @param {string} $value - desired value
@function last-index($list, $value) {
	@for $i from length($list)*-1 through -1 {
		@if nth($list, abs($i)) == $value {
			@return abs($i);
		}
	}
  	@return null;
}

/// Revierte el orden de una lista
/// @since 0.1.4
/// @author [Hugo Giraudel](HugoGiraudel.com/2013/08/08/advanced-sass-list-functions/)
/// @acces public
/// @param {list} $list - List
/// @param {bool} $recursive
@function reverse($list, $recursive: false) {
   $result: ();
   @for $i from length($list)*-1 through -1 {
      @if type-of(nth($list, abs($i))) == list and $recursive {
        $result: append($result, reverse(nth($list, abs($i)), $recursive));      
      }

      @else {
        $result: append($result, nth($list, abs($i)));
      }
   }
   @return $result;
}


/// Toma una lista, la invierte, devuelve el valor de un item
/// según su correspondiente indice y lo multiplica por 10
/// @author [Diego Martin Marmol](http://diegomarmol.com.ar)
/// @since 0.1.4
/// @param {list} $list - The list
/// @param {string} $value - Value inside the list
/// @return {int} - z-index value
@function z($list, $value) {
	$reverse: reverse($list);
	$index: index($reverse, $value);
	@if $index == '' {
	    @warn "No $index found for `#{$index}` in #{$list}";
  	} @else {
		$index: $index * 10; // Multiply by 10 just to keep a safe distance between elements
		@return $index;  		
  	}
}


// 0.1.5
// Imprime los valores de una lista como un "consoe.log()"
// ====================
@function debugList($list) {
  $result: #{"[ "};

  @each $item in $list {
    @if length($item) > 1 {
      $result: $result#{debug($item)};
    }
    @else {
      $result: $result#{$item};
    }
    @if index($list, $item) != length($list) {
      $result: $result#{", "};
    }
  } 

  $result: $result#{" ]"};

  @return $result;
}


/// Devuelve un color del array $color-pallete en base al nombre del color
/// @author [Diego Martin Marmol](http://diegomarmol.com.ar)
/// @since 0.5.5
/// @param {string} $color - Color key inside `$map`
/// @param {list} $map [$color-pallete] - Color pallete SASS map
/// @return {*} - Color value
@function getColor($color, $map: $color-pallete) {
	// @debug keyExist( $map, $color );
	@if ( isMap($map) ) {
		$color-in-map: map-get($map, $color);
		@if ( $color-in-map == '' ) {
			@warn '#{$color} no ha devuelto ningún valor o no existe';
		} @else {
			@if ( $color-in-map != false ) {
				// @debug $color-in-map;
				@return map-get($map, $color);
			} @else {
				@warn 'No existe un color con ese nombre definido en la paleta de colores';			
			}
		}
	} @else {
		@warn '#{$map} No es un Objeto del tipo Mapa';
	}
}


/// ifcolor()
/// Imprime el valor del color contrastando con el valor del primer argumento
/// @author [Diego Martin Marmol](http://diegomarmol.com.ar)
/// @see $text-color
/// @see $bright-text-color
/// @param {int | function } $bg-color - Color de fondo del elemento
/// @param {int | function } $dark-color - Color oscuro
/// @param {int | function } $bright-color - Color Claro
/// @return {*} - Color value
@function ifcolor($bg-color, $dark-color: $text-color, $bright-color: $bright-text-color) {
	$lightness: lightness($bg-color);
	$treshold:	lightness(#aaa);
	@if ( $lightness > $treshold ) {
		@return $dark-color;
	}
	@else {
		@return $bright-color;	
	}
}



/// Devuelve el valor de una lista bi-dimensional segun un string
/// @author [Diego Martin Marmol](http://diegomarmol.com.ar)
/// @since 0.5.5
@function list($item, $list) {
	$r: '';
	@for $i from 1 through length($list) {
		$index: nth($list, $i);
		$item_list_name: nth($index, 1);		// Value 1
		$item_list_value: nth($index, 2);
		// @debug $color_list_name;
		// @debug $color_list_name + ' '+ $color_name;
		@if ( $item == $color_list_name ) {
			$r: $color_list_value;
		}
	}
	@if ( $r != '' ) {
		@return $r;
	} @else {
		@warn 'No existe un valor con ese nombre definido dentro de la lista';
	}
}


// ============================================
// SCSS MAPS
// ============================================
/// @since 0.5.1
/// @group Function Maps
/// @author [Diego Martin Marmol](http://diegomarmol.com.ar)
/// @access public
/// @param {*} $key - Key inside the list
/// @param {*} $list - SASS List
/// Check if a key is present inside a list and return the key
/// Evalua si un indice existe dentro de un map
@function keyExist($list, $key) {
	@return map-has-key($list, $key);
}

/// @since 0.5.5
/// @group Function Maps
/// @author [Diego Martin Marmol](http://diegomarmol.com.ar)
/// @access public
/// @param {*} $map - Map to be evaluated
/// Check if an element is a map and return true or false
@function isMap($map) {
	@return type-of( $map ) == map;
}


/// map-set function (not included with Sass)
/// @since 0.5.0
/// @group Function Maps
/// @author [Miriam Suzanne](http://oddbird.net/2013/10/19/map-merge/)
/// @access public
/// @param {map} $map - Selected map
/// @param {*} $key - New key
/// @param {*} $value - New value
@function map-set($map, $key, $value) {
  $new: ($key: $value);
  @return map-merge($map, $new);
}

/// Push Function
/// Map-push function (adds item to list in map)
/// @author [Diego Martin Marmol](http://diegomarmol.com.ar)
/// @since 0.5.0
/// @group Function Maps
/// @param {map} $map - Scss map
/// @param {map} $new-map - New map
/// @return {*} - Map
@function map-push( $map, $new-map ) {
  @return map-merge( $map, $new-map );
}

/// Map deep get
/// @since 0.5.0
/// @group Function Maps
/// @author Hugo Giraudel
/// @access public
/// @param {Map} $map - Map
/// @param {Arglist} $keys - Key chain
/// @return {*} - Desired value
@function map-deep-get($map, $keys...) {
    @each $key in $keys {
        $map: map-get($map, $key);
    }
    @return $map;
}

/// Deep set function to set a value in nested maps
/// @author Hugo Giraudel
/// @access public
/// @param {Map} $map - Map
/// @param {List} $keys -  Key chaine
/// @param {*} $value - Value to assign
/// @return {Map}
@function map-deep-set($map, $keys, $value) {
  $maps: ($map,);
  $result: null;
  
  // If the last key is a map already
  // Warn the user we will be overriding it with $value
  @if type-of(nth($keys, -1)) == "map" {
    @warn "The last key you specified is a map; it will be overrided with `#{$value}`.";
  }
  
  // If $keys is a single key
  // Just merge and return
  @if length($keys) == 1 {
    @return map-merge($map, ($keys: $value));
  }
  
  // Loop from the first to the second to last key from $keys
  // Store the associated map to this key in the $maps list
  // If the key doesn't exist, throw an error
  @for $i from 1 through length($keys) - 1 {
    $current-key: nth($keys, $i);
    $current-map: nth($maps, -1);
    $current-get: map-get($current-map, $current-key);
    @if $current-get == null {
      @error "Key `#{$key}` doesn't exist at current level in map.";
    }
    $maps: append($maps, $current-get);
  }
  
  // Loop from the last map to the first one
  // Merge it with the previous one
  @for $i from length($maps) through 1 {
    $current-map: nth($maps, $i);
    $current-key: nth($keys, $i);
    $current-val: if($i == length($maps), $value, $result);
    $result: map-merge($current-map, ($current-key: $current-val));
  }
  
  // Return result
  @return $result;
}



// ============================================
// MEDIA QUERIES
// ============================================
@function until( $value, $isDevice:false ) {
	@if ( $isDevice == false ) {
		@return 'max-width: #{$value}';		
	} @else {
		@return 'max-device-width: #{$value}';
	}
}
@function since( $value, $isDevice:false ) {
	@if ( $isDevice == false ) {
		@return 'min-width: #{$value}';		
	} @else {
		@return 'min-device-width: #{$value}';
	}
}